{"version":3,"sources":["logo.svg","lookup/components.js","posts/lookup.js","posts/buttons.js","profiles/components.js","profiles/utils.js","profiles/badge.js","profiles/lookup.js","posts/detail.js","posts/list.js","posts/create.js","posts/feed.js","posts/components.js","App.js","reportWebVitals.js","index.js"],"names":["backendLookup","method","endpoint","callback","data","jsonData","JSON","stringify","xhr","XMLHttpRequest","url","responseType","csrftoken","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","getCookie","open","setRequestHeader","onload","status","response","detail","window","location","href","indexOf","onerror","e","send","apiPostFeed","nextUrl","undefined","replace","apiPostList","username","ActionBtn","props","post","action","didPerformAction","likes","className","actionDisplay","display","handleActionBackendEvent","console","log","type","onClick","event","preventDefault","postId","id","apiPostAction","UserLink","children","UserDisplay","user","includeFullName","hideLink","nameDisplay","first_name","last_name","Fragment","UserPicture","userIdSpan","DisplayCount","numeral","format","ProfileBadge","didFollowToggle","profileLoading","currentVerb","is_following","follower_count","following_count","bio","ProfileBadgeComponent","useState","didLookup","setDidLookup","profile","setProfile","setProfileLoading","handleBackendLookup","useEffect","apiProfileDetail","actionVerb","toLowerCase","apiProfileFollowToggle","ParentPost","parent","Post","isRetweet","retweeter","hideActions","didRetweet","actionPost","setActionPost","match","pathname","urlPostId","groups","postid","isDetail","handlePerformAction","newActionPost","tweet","PostsList","PostsInit","setPostsInit","posts","setPosts","setNextUrl","PostsDidSet","setPostsDidSet","final","newPosts","concat","next","results","alert","handleDidRetweet","newPost","updatePostsInit","unshift","updateFinalPosts","map","item","index","PostCreate","textAreaRef","React","createRef","didPost","handleBackendUpdate","onSubmit","newVal","current","value","ref","required","FeedList","PostsComponent","setNewPosts","canPost","tempNewPosts","PostDetailComponent","setPost","apiPostDetail","App","src","logo","alt","target","rel","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","appEl","getElementById","ReactDOM","render","createElement","postsEl","dataset","postFeedEl","querySelectorAll","forEach","container"],"mappings":"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","file":"static/js/main.bc6e0c35.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","function getCookie(name) {\n  let cookieValue = null;\n  if (document.cookie && document.cookie !== '') {\n      const cookies = document.cookie.split(';');\n      for (let i = 0; i < cookies.length; i++) {\n          const cookie = cookies[i].trim();\n          // Does this cookie string begin with the name we want?\n          if (cookie.substring(0, name.length + 1) === (name + '=')) {\n              cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n              break;\n          }\n      }\n  }\n  return cookieValue;\n}\n  /*\nexport function backendLookup(method, endpoint, callback, data) {\n  let jsonData;\n  if (data){\n    jsonData = JSON.stringify(data)\n  } \n  const xhr = new XMLHttpRequest() //used to interact with servers, retrieve data from a URL without doing a full page refresh\n  const url = `http://localhost:8000/api${endpoint}`\n  xhr.responseType = \"json\"\n  const csrftoken = getCookie('csrftoken');\n  xhr.open(method, url) //Initializes a request.\n  xhr.setRequestHeader(\"Content-Type\", \"application/json\") //setRequestHeader(name, value) Sets the request header with the given name and value.\n   \n  \n  if (csrftoken){\n    xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\")\n    xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\")\n    xhr.setRequestHeader(\"X-CSRFToken\", csrftoken)\n  }\n  xhr.onload = function() { //Fired when an XMLHttpRequest transaction completes successfully.\n    callback(xhr.response, xhr.status)\n  }\n  xhr.onerror = function (e) { //e is the short var reference for event object which will be passed to event handlers.\n    console.log(e)\n    callback({\"message\": \"The request was an error\"}, 400)\n  }\n  console.log(jsonData)\n  xhr.send(jsonData)\n}\n\n*/\n\nexport function backendLookup(method, endpoint, callback, data) {\n\n  let jsonData;\n  if (data){\n    jsonData = JSON.stringify(data)\n  }\n  const xhr = new XMLHttpRequest()\n  const url = `http://localhost:8000/api${endpoint}`\n  xhr.responseType = \"json\"\n  const csrftoken = getCookie('csrftoken');\n  xhr.open(method, url)\n  xhr.setRequestHeader(\"Content-Type\", \"application/json\")\n\n  if (csrftoken){\n    //xhr.setRequestHeader(\"HTTP_X_REQUESTED_WITH\", \"XMLHttpRequest\")\n    xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\")\n    xhr.setRequestHeader(\"X-CSRFToken\", csrftoken)\n  }\n  \n  xhr.onload = function() {\n    if (xhr.status === 403) {\n      const detail = xhr.response.detail\n      if (detail === \"Authentication credentials were not provided.\") {\n        if (window.location.href.indexOf(\"login\") === -1) { \n          window.location.href = \"/login?showLoginRequired=true \"\n        }\n      }\n    }\n    callback(xhr.response, xhr.status)\n  }\n\n  xhr.onerror = function (e) {\n    callback({\"message\": \"The request was an error\"}, 400)\n  }\n  xhr.send(jsonData)\n}","import {backendLookup} from '../lookup'\n\nexport function apiPostFeed(callback, nextUrl) {\n    let endpoint = \"/posts/feed\"\n    \n    if (nextUrl !== null && nextUrl !== undefined){\n        endpoint = nextUrl.replace(\"http://localhost:8000/api\", \"\")\n    }\n    backendLookup(\"GET\", endpoint, callback)\n}\n\n\n\nexport function apiPostCreate(newPost, callback){\n    backendLookup(\"POST\", \"/posts/create/\", callback, {tweet: newPost})\n  } //method is post, endpoint is /posts/create, data is tweet\n\n\nexport function apiPostAction(postId, action, callback){\n    const data = {id: postId, action: action}\n    backendLookup(\"POST\", \"/posts/action/\", callback, data)\n}\n\n\nexport function apiPostDetail(postId, callback){\n    backendLookup(\"GET\", `/posts/${postId}/`, callback)\n}\n\n\nexport function apiPostList(username, callback, nextUrl) {\n    let endpoint = \"/posts/\"\n    if (username) {\n        endpoint = `/posts/?username=${username}`\n    }\n    if (nextUrl !== null && nextUrl !== undefined){\n        endpoint = nextUrl.replace(\"http://localhost:8000/api\", \"\")\n    }\n    backendLookup(\"GET\", endpoint, callback)\n}\n\n","import React  from 'react'\n\nimport {apiPostAction} from './lookup' \n\n\n\nexport function ActionBtn(props) {\n    const {post, action, didPerformAction} = props\n    const likes = post.likes ? post.likes : 0\n    \n    const className = props.className ? props.className : 'btn btn-primary btn-sm'\n    const actionDisplay = action.display ? action.display : 'Action'\n    \n    const handleActionBackendEvent = (response, status) =>{\n      console.log(response, status)\n      if ((status === 200 || status === 201) && didPerformAction){ //if status is 200 or 201 and didperformaction exists, pass on response and status to didperformaction\n      \n        didPerformAction(response, status)\n        \n      }     \n    }\n    const handleClick = (event) => {\n      event.preventDefault()\n      apiPostAction(post.id, action.type, handleActionBackendEvent)\n    }\n    const display = action.type === 'like' ? `${likes} ${actionDisplay}` : actionDisplay\n    return <button className={className} onClick={handleClick}>{display}</button>\n  }","import React from 'react'\n\n\n\nexport function UserLink (props) {\n  const {username} = props\n  const handleUserLink = (event) => {\n    window.location.href= `/profiles/${username}`\n  }\n  return <span className='pointer' onClick={handleUserLink}>\n      {props.children}\n  </span>\n}\n\n\nexport  function UserDisplay(props){\n  const {user, includeFullName, hideLink} = props\n  const nameDisplay = includeFullName === true ? `${user.first_name} ${user.last_name} ` : null\n  return <React.Fragment>\n    {nameDisplay}\n    {hideLink === true ? `@${user.username}` : <UserLink username={user.username}>@{user.username}</UserLink>}\n  </React.Fragment>\n}\n\nexport  function UserPicture (props) {\n  const {user, hideLink} = props\n  const userIdSpan = <span className='mx-1 px-3 py-2 rounded-circle bg-dark text-white'>\n  {user.username[0]}\n</span>\n  return  hideLink === true ? userIdSpan : <UserLink username={user.username}>{userIdSpan}</UserLink>\n}","import React from 'react'\nimport numeral from 'numeral'\n\nexport function DisplayCount(props) {\n    return <span className = {props.className}>{numeral(props.children).format(\"0a\")}</span>\n}","import React, {useEffect, useState} from 'react'\n\nimport {UserDisplay, UserPicture} from './components'\nimport {apiProfileDetail, apiProfileFollowToggle} from './lookup'\n\nimport {DisplayCount}  from './utils'\n\n\nfunction ProfileBadge(props) {\n    const {user, didFollowToggle, profileLoading} = props\n    let currentVerb = (user && user.is_following) ? \"Unfollow\" : \"Follow\"\n    currentVerb = profileLoading ? \"Loading...\" : currentVerb\n    const handleFollowToggle = (event) => {\n        event.preventDefault()\n        if (didFollowToggle && !profileLoading) {\n            didFollowToggle(currentVerb)\n        }\n    }\n    return user ? <div>\n        <UserPicture user={user} hideLink />\n        <p><UserDisplay user={user} includeFullName hideLink /></p>\n        <p> <DisplayCount>{user.follower_count}</DisplayCount> {user.follower_count === 1 ? \"follower\" : \"followers\"} </p>\n        <p> <DisplayCount>{user.following_count}</DisplayCount> following </p>\n        <p>{user.location}</p>\n        <p>{user.bio}</p>\n        <button className='btn btn-primary' onClick={handleFollowToggle}>{currentVerb}</button>\n    </div> : null\n}\n\nexport function ProfileBadgeComponent (props) {\n    const {username} = props\n    // lookup\n    const [didLookup, setDidLookup] = useState(false)\n    const [profile, setProfile] = useState(null)\n    const [profileLoading, setProfileLoading] = useState(false)\n    const handleBackendLookup = (response, status) => {\n      if (status === 200) {\n        setProfile(response)\n      }\n    }\n    useEffect(()=>{\n      if (didLookup === false){\n        apiProfileDetail(username, handleBackendLookup)\n        setDidLookup(true)\n      }\n    }, [username, didLookup, setDidLookup])\n\n    const handleNewFollow = (actionVerb) => {\n        apiProfileFollowToggle(username, actionVerb, (response, status)=>{\n            \n             console.log(response, status)\n            if (status===200) {\n                setProfile(response)\n                console.log(response, status)\n                // apiProfileDetail(username, handleBackendLookup)\n            }\n            setProfileLoading(false)\n        })\n        setProfileLoading(true)\n        \n    }\n    return didLookup === false ? \"Loading...\" : profile ? <ProfileBadge user={profile} didFollowToggle={handleNewFollow} profileLoading={profileLoading} /> : null\n}","\nimport {backendLookup} from '../lookup'\n\nexport function apiProfileDetail(username, callback) {\n    backendLookup(\"GET\", `/profiles/${username}/`, callback)\n}\n\n\nexport function apiProfileFollowToggle(username, action, callback) {\n    const data = {action: `${action && action}`.toLowerCase()}\n    backendLookup(\"POST\", `/profiles/${username}/follow`, callback, data)\n}","import React, {useState}  from 'react'\n\nimport {ActionBtn} from './buttons'\n\n\nimport {\n  UserDisplay,\n  UserPicture\n} from '../profiles'\n\n\n\nexport function ParentPost(props){\n    const {post} = props\n    return post.parent ? <Post isRetweet retweeter={props.retweeter} hideActions className={' '} post={post.parent} /> : null\n  }\n\n  export function Post(props) {\n      const {post, didRetweet, hideActions, isRetweet, retweeter} = props\n      const [actionPost, setActionPost] = useState(props.post ? props.post : null)\n      let className = props.className ? props.className : 'col-10 mx-auto col-md-6'\n      className = isRetweet === true ? `${className} p-2 border rounded` : className\n      const path = window.location.pathname\n      const match = path.match(/(?<postid>\\d+)/ )\n      const urlPostId = match ? match.groups.postid : -1 //if match than its match.groups.postid, otherwise its\n      const isDetail = `${post.id}` === `${urlPostId}`\n      const handleLink = (event) => {\n        event.preventDefault()\n        window.location.href = `/${post.id}`\n      }\n\n      const handlePerformAction = (newActionPost, status) => {\n        if (status === 200){\n          setActionPost(newActionPost)\n        } else if (status === 201) {\n          if (didRetweet){\n            didRetweet(newActionPost)\n          }\n        }\n      }\n      return <div className={className}>\n        {isRetweet === true &&<div className='mb-2'>\n        <span className='small text-muted'>Retweet via <UserDisplay user={retweeter} /></span>\n        </div>}\n        <div className='d-flex'>\n          <div className=''>\n            <UserPicture user={post.user} />\n\n\n          </div>\n          <div className='col-11'>\n              <div>\n                <p>\n                <UserDisplay includeFullName user={post.user} />\n                \n                </p>\n                <p> {post.tweet}</p>\n                <ParentPost post={post} retweeter={post.user}/>\n              </div>   \n           <div className='btn btn-group px-0'>\n           {(actionPost && hideActions !== true) && <React.Fragment> \n              <ActionBtn post={actionPost} didPerformAction = {handlePerformAction} action={{type: \"like\", display:\"Likes\"}}/>\n              <ActionBtn post={actionPost} didPerformAction = {handlePerformAction} action={{type: \"unlike\", display:\"Unlike\"}}/>\n              <ActionBtn post={actionPost} didPerformAction = {handlePerformAction} action={{type: \"retweet\", display:\"Retweet\"}}/>\n             </React.Fragment>\n            }\n              {isDetail === true ? null : <button className = \"btn btn-outline-primary btn-sm\" onClick ={handleLink}>View</button>}\n            </div>\n            </div>\n         \n        </div>  \n        </div>    \n  }","import React, {useEffect, useState}  from 'react'\n\nimport {apiPostList} from './lookup'\n\nimport {Post} from './detail'\n\nexport function PostsList(props) {\n    const [PostsInit, setPostsInit] = useState([])\n    const [posts, setPosts] = useState([])\n    const [nextUrl, setNextUrl] = useState(null)\n    const [PostsDidSet, setPostsDidSet] = useState(false)\n    useEffect(()=>{\n      const final = [...props.newPosts].concat(PostsInit)\n      if (final.length !== posts.length) {\n        setPosts(final)\n      }\n    }, [props.newPosts, posts, PostsInit])\n    useEffect(() => {\n      if (PostsDidSet === false){\n        const handlePostListLookup = (response, status) => {\n          if (status === 200){\n            setNextUrl(response.next)\n            setPostsInit(response.results)\n            setPostsDidSet(true)\n          } else {\n            alert(\"There was an error\")\n          }\n        }\n        apiPostList(props.username, handlePostListLookup)\n      }\n    }, [PostsInit, PostsDidSet, setPostsDidSet, props.username])\n\n\n    const handleDidRetweet = (newPost) => {\n      const updatePostsInit = [...PostsInit]\n      updatePostsInit.unshift(newPost)\n      setPostsInit(updatePostsInit)\n      const updateFinalPosts = [...posts]\n      updateFinalPosts.unshift(posts)\n      setPosts(updateFinalPosts)\n    } \n\n    const handleLoadNext = (event) => {\n      event.preventDefault()\n      if (nextUrl !== null) {\n        const handleLoadNextResponse = (response, status) =>{\n          if (status === 200){\n            setNextUrl(response.next)\n            const newPosts = [...posts].concat(response.results)\n            setPostsInit(newPosts)\n            setPosts(newPosts)\n          } else {\n            alert(\"There was an error\")\n          }\n        }\n        apiPostList(props.username,handleLoadNextResponse, nextUrl)\n      }\n    }\n    return <React.Fragment>{posts.map((item, index)=>{\n      return <Post  \n        post={item} \n        didRetweet={handleDidRetweet}\n        className='my-5 py-5 border bg-white text-dark' \n        key={`${index}-{item.id}`} />\n    })}\n    { nextUrl !== null && <button onClick={handleLoadNext}className='btn btn-outline-primary'>Load Next </button>}\n    </React.Fragment>\n  }\n","import React from 'react'\nimport {apiPostCreate} from './lookup'\n\n\nexport function PostCreate(props){\n  const textAreaRef = React.createRef()\n  const {didPost} = props\n    const handleBackendUpdate = (response, status) =>{\n      if (status === 201){\n        didPost(response)\n      } else {\n        console.log(response)\n        alert(\"An error occured please try again\")\n      }\n    }\n\n    const handleSubmit = (event) => {\n      event.preventDefault()\n      const newVal = textAreaRef.current.value\n      // backend api request\n      apiPostCreate(newVal, handleBackendUpdate)\n      textAreaRef.current.value = ' '\n    }\n    return <div className={props.className}>\n          <form onSubmit={handleSubmit}>\n            <textarea ref={textAreaRef} required={true} className='form-control' name='post'>\n\n            </textarea>\n            <button type='submit' className='btn btn-primary my-3'>Post</button>\n        </form>\n  </div>\n}","import React, {useEffect, useState}  from 'react'\n\nimport {apiPostFeed} from './lookup'\n\nimport {Post} from './detail'\n\nexport function FeedList(props) {\n    const [PostsInit, setPostsInit] = useState([])\n    const [posts, setPosts] = useState([])\n    const [nextUrl, setNextUrl] = useState(null)\n    const [PostsDidSet, setPostsDidSet] = useState(false)\n    useEffect(()=>{\n      const final = [...props.newPosts].concat(PostsInit)\n      if (final.length !== posts.length) {\n        setPosts(final)\n      }\n    }, [props.newPosts, posts, PostsInit])\n    useEffect(() => {\n      if (PostsDidSet === false){\n        const handlePostListLookup = (response, status) => {\n          if (status === 200){\n            setNextUrl(response.next)\n            setPostsInit(response.results)\n            setPostsDidSet(true)\n          } \n        }\n        apiPostFeed(handlePostListLookup)\n      }\n    }, [PostsInit, PostsDidSet, setPostsDidSet, props.username])\n\n\n    const handleDidRetweet = (newPost) => {\n      const updatePostsInit = [...PostsInit]\n      updatePostsInit.unshift(newPost)\n      setPostsInit(updatePostsInit)\n      const updateFinalPosts = [...posts]\n      updateFinalPosts.unshift(posts)\n      setPosts(updateFinalPosts)\n    } \n\n    const handleLoadNext = (event) => {\n      event.preventDefault()\n      if (nextUrl !== null) {\n        const handleLoadNextResponse = (response, status) =>{\n          if (status === 200){\n            setNextUrl(response.next)\n            const newPosts = [...posts].concat(response.results)\n            setPostsInit(newPosts)\n            setPosts(newPosts)\n          } \n        }\n        apiPostFeed(handleLoadNextResponse, nextUrl)\n      }\n    }\n    return <React.Fragment>{posts.map((item, index)=>{\n      return <Post  \n        post={item} \n        didRetweet={handleDidRetweet}\n        className='my-5 py-5 border bg-white text-dark' \n        key={`${index}-{item.id}`} />\n    })}\n    { nextUrl !== null && <button onClick={handleLoadNext}className='btn btn-outline-primary'>Load Next </button>}\n    </React.Fragment>\n  }\n","import React, {useEffect, useState}  from 'react'\n\nimport {PostCreate} from './create'\nimport {Post} from './detail'\nimport {PostsList} from './list'\nimport {FeedList} from './feed'\nimport {apiPostDetail} from './lookup'\n\n\n\nexport function FeedComponent(props) {\n  const [newPosts, setNewPosts] = useState([])\n  const canPost = props.canPost === \"false\" ? false : true\n  const handleNewPost = (newPost) =>{\n    let tempNewPosts = [...newPosts]\n    tempNewPosts.unshift(newPost)\n    setNewPosts(tempNewPosts) \n  }\n  return <div className={props.className}>\n          {canPost === true && <PostCreate didPost={handleNewPost} className='col-12 mb-3' />}\n        <FeedList newPosts={newPosts} {...props} />\n  </div>\n}\n\n\n\nexport function PostsComponent(props) {\n    const [newPosts, setNewPosts] = useState([])\n    const canPost = props.canPost === \"false\" ? false : true\n    const handleNewPost = (newPost) =>{\n      let tempNewPosts = [...newPosts]\n      tempNewPosts.unshift(newPost)\n      setNewPosts(tempNewPosts) \n    }\n    return <div className={props.className}>\n            {canPost === true && <PostCreate didPost={handleNewPost} className='col-12 mb-3' />}\n          <PostsList newPosts={newPosts} {...props} />\n    </div>\n}\n\nexport function PostDetailComponent(props) {\n  const {postId} = props\n  console.log(props)\n \n  const[didLookup, setDidLookup] = useState(false)\n  const [post, setPost] = useState(null)\n  \n  const handleBackendLookup = (response, status) => {\n    if (status === 200) {\n      setPost(response)\n    } else {\n      console.log(response)\n      alert(\"There was an error finding your post.\")\n    }\n  }\n  useEffect(()=>{\n    if (didLookup === false){\n      console.log(postId)\n      apiPostDetail(postId, handleBackendLookup)\n      setDidLookup(true) \n    }\n  }, [postId, didLookup, setDidLookup])\n \n  return post === null ? null : <Post post = {post} className = {props.className} />\n}\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport {PostsComponent} from './posts'\n\n\nfunction App() {\n  \n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <div>\n          <PostsComponent /> \n        </div>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {ProfileBadgeComponent} from './profiles'\nimport {FeedComponent, PostsComponent, PostDetailComponent} from './posts'\nimport reportWebVitals from './reportWebVitals';\n\n\nconst appEl = document.getElementById('root')\nif (appEl) {\n  ReactDOM.render(<App />, appEl);\n}\nconst e = React.createElement\nconst postsEl = document.getElementById(\"network\")\nif (postsEl) {\n  ReactDOM.render(e(PostsComponent, postsEl.dataset), postsEl);\n}\n\nconst postFeedEl = document.getElementById(\"network-feed\")\nif (postFeedEl) {\n    ReactDOM.render(\n        e(FeedComponent, postFeedEl.dataset), postFeedEl);\n}\n\nconst PostDetailElements = document.querySelectorAll(\".network-detail\")\n\nPostDetailElements.forEach(container => {\n  ReactDOM.render(e(PostDetailComponent, container.dataset), container);\n})\n\nconst userProfileBadgeElements = document.querySelectorAll(\".network-profile-badge\")\n\nuserProfileBadgeElements.forEach(container => {\n  ReactDOM.render(e(ProfileBadgeComponent, container.dataset), container);\n})\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n"],"sourceRoot":""}
{"ast":null,"code":"var _jsxFileName = \"/Users/romansingh/Documents/project4/network-web/src/posts/create.js\";\nimport React from 'react';\nimport { apiPostCreate } from './lookup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function PostCreate(props) {\n  const textAreaRef = /*#__PURE__*/React.createRef(); //React refs make it possible for you to directly access the DOM in React.\n\n  const {\n    didPost\n  } = props;\n\n  const handleBackendUpdate = (response, status) => {\n    if (status === 201) {\n      didPost(response); //change the state of setNewPosts to tempNewPosts\n    } else {\n      console.log(response);\n      alert(\"An error occured please try again\");\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault(); //if intended action does not occur prevent default action\n\n    const newVal = textAreaRef.current.value; //set newVal equal to the value of the text area\n    // backend api request\n\n    apiPostCreate(newVal, handleBackendUpdate); //newVal is the new post\n    //response and status are the callback\n\n    textAreaRef.current.value = ''; // set text area to be blank after submit\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: props.className,\n    children: canPost === true && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-12 mb-3\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          ref: textAreaRef,\n          required: true,\n          className: \"form-control\",\n          name: \"Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary my-3\",\n          children: \"Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 32\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 10\n  }, this);\n}\n_c = PostCreate;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostCreate\");","map":{"version":3,"sources":["/Users/romansingh/Documents/project4/network-web/src/posts/create.js"],"names":["React","apiPostCreate","PostCreate","props","textAreaRef","createRef","didPost","handleBackendUpdate","response","status","console","log","alert","handleSubmit","event","preventDefault","newVal","current","value","className","canPost"],"mappings":";AAAA,OAAOA,KAAP,MAAmB,OAAnB;AAGA,SAAQC,aAAR,QAA4B,UAA5B;;AAGA,OAAO,SAASC,UAAT,CAAoBC,KAApB,EAA0B;AAE/B,QAAMC,WAAW,gBAAGJ,KAAK,CAACK,SAAN,EAApB,CAF+B,CAEO;;AACtC,QAAM;AAACC,IAAAA;AAAD,MAAYH,KAAlB;;AACA,QAAMI,mBAAmB,GAAG,CAACC,QAAD,EAAWC,MAAX,KAAsB;AAChD,QAAIA,MAAM,KAAK,GAAf,EAAmB;AAEjBH,MAAAA,OAAO,CAACE,QAAD,CAAP,CAFiB,CAEC;AAEnB,KAJD,MAIO;AACLE,MAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACAI,MAAAA,KAAK,CAAC,mCAAD,CAAL;AACD;AACF,GATD;;AAWA,QAAMC,YAAY,GAAIC,KAAD,IAAW;AAC9BA,IAAAA,KAAK,CAACC,cAAN,GAD8B,CACP;;AACvB,UAAMC,MAAM,GAAGZ,WAAW,CAACa,OAAZ,CAAoBC,KAAnC,CAF8B,CAEW;AACzC;;AACAjB,IAAAA,aAAa,CAACe,MAAD,EAAST,mBAAT,CAAb,CAJ8B,CAIa;AAC3C;;AACAH,IAAAA,WAAW,CAACa,OAAZ,CAAoBC,KAApB,GAA4B,EAA5B,CAN8B,CAMC;AAChC,GAPD;;AAQA,sBAAO;AAAK,IAAA,SAAS,EAAEf,KAAK,CAACgB,SAAtB;AAAA,cACEC,OAAO,KAAK,IAAZ,iBAAoB;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,6BACnB;AAAM,QAAA,QAAQ,EAAEP,YAAhB;AAAA,gCACE;AAAU,UAAA,GAAG,EAAET,WAAf;AAA4B,UAAA,QAAQ,EAAE,IAAtC;AAA4C,UAAA,SAAS,EAAC,cAAtD;AAAqE,UAAA,IAAI,EAAC;AAA1E;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,SAAS,EAAC,sBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADmB;AAAA;AAAA;AAAA;AAAA;AADtB;AAAA;AAAA;AAAA;AAAA,UAAP;AAYD;KAnCeF,U","sourcesContent":["import React  from 'react'\n\n\nimport {apiPostCreate} from './lookup' \n\n\nexport function PostCreate(props){\n  \n  const textAreaRef = React.createRef() //React refs make it possible for you to directly access the DOM in React.\n  const {didPost} = props \n  const handleBackendUpdate = (response, status) => {\n    if (status === 201){\n    \n      didPost(response) //change the state of setNewPosts to tempNewPosts\n\n    } else {\n      console.log(response)\n      alert(\"An error occured please try again\")\n    }\n  }\n  \n  const handleSubmit = (event) => { \n    event.preventDefault() //if intended action does not occur prevent default action\n    const newVal = textAreaRef.current.value //set newVal equal to the value of the text area\n    // backend api request\n    apiPostCreate(newVal, handleBackendUpdate) //newVal is the new post\n    //response and status are the callback\n    textAreaRef.current.value = '' // set text area to be blank after submit\n  }\n  return <div className={props.className}>\n          {canPost === true && <div className='col-12 mb-3'>\n            <form onSubmit={handleSubmit}>  \n              <textarea ref={textAreaRef} required={true} className='form-control' name='Post'>\n\n              </textarea>\n              <button type='submit' className='btn btn-primary my-3'>Post</button>\n          </form>\n          </div>\n        }\n     \n  </div>\n}"]},"metadata":{},"sourceType":"module"}
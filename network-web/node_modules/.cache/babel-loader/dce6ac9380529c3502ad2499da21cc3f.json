{"ast":null,"code":"function lookup(method, endpoint, callback, data) {\n  let jsonData;\n\n  if (data) {\n    //if data exists\n    jsonData = JSON.stringify(data);\n  }\n\n  const xhr = new XMLHttpRequest(); //used to intereact with servers, retrieve data from a URL without doing a full page refresh\n\n  const url = `http://localhost:8000/api${endpoint}`;\n  console.log(endpoint);\n  xhr.responseType = \"json\";\n  xhr.open(method, url); //Initializes a request.\n\n  xhr.onload = function () {\n    //Fired when an XMLHttpRequest transaction completes successfully.\n    callback(xhr.response, xhr.status);\n  };\n\n  xhr.onerror = function (e) {\n    //e is the short var reference for event object which will be passed to event handlers.\n    console.log(e);\n    callback({\n      \"message\": \"The request was an error\"\n    }, 400);\n  };\n\n  xhr.send(jsonData);\n}\n\nexport function createPost(newPost, callback) {}\nexport function loadPosts(callback) {\n  lookup(\"GET\", \"/posts/\", callback);\n}","map":{"version":3,"sources":["/Users/romansingh/Documents/project4/network-web/src/lookup/components.js"],"names":["lookup","method","endpoint","callback","data","jsonData","JSON","stringify","xhr","XMLHttpRequest","url","console","log","responseType","open","onload","response","status","onerror","e","send","createPost","newPost","loadPosts"],"mappings":"AAAA,SAASA,MAAT,CAAgBC,MAAhB,EAAwBC,QAAxB,EAAkCC,QAAlC,EAA4CC,IAA5C,EAAkD;AAChD,MAAIC,QAAJ;;AACA,MAAID,IAAJ,EAAS;AAAE;AACTC,IAAAA,QAAQ,GAAGC,IAAI,CAACC,SAAL,CAAeH,IAAf,CAAX;AACD;;AACD,QAAMI,GAAG,GAAG,IAAIC,cAAJ,EAAZ,CALgD,CAKf;;AACjC,QAAMC,GAAG,GAAI,4BAA2BR,QAAS,EAAjD;AACAS,EAAAA,OAAO,CAACC,GAAR,CAAYV,QAAZ;AACAM,EAAAA,GAAG,CAACK,YAAJ,GAAmB,MAAnB;AACAL,EAAAA,GAAG,CAACM,IAAJ,CAASb,MAAT,EAAiBS,GAAjB,EATgD,CAS1B;;AACtBF,EAAAA,GAAG,CAACO,MAAJ,GAAa,YAAW;AAAE;AACxBZ,IAAAA,QAAQ,CAACK,GAAG,CAACQ,QAAL,EAAeR,GAAG,CAACS,MAAnB,CAAR;AACD,GAFD;;AAGAT,EAAAA,GAAG,CAACU,OAAJ,GAAc,UAAUC,CAAV,EAAa;AAAE;AAC3BR,IAAAA,OAAO,CAACC,GAAR,CAAYO,CAAZ;AACAhB,IAAAA,QAAQ,CAAC;AAAC,iBAAW;AAAZ,KAAD,EAA0C,GAA1C,CAAR;AACD,GAHD;;AAIAK,EAAAA,GAAG,CAACY,IAAJ,CAASf,QAAT;AACD;;AAED,OAAO,SAASgB,UAAT,CAAoBC,OAApB,EAA6BnB,QAA7B,EAAuC,CAE7C;AAED,OAAO,SAASoB,SAAT,CAAmBpB,QAAnB,EAA6B;AAClCH,EAAAA,MAAM,CAAC,KAAD,EAAQ,SAAR,EAAmBG,QAAnB,CAAN;AACD","sourcesContent":["function lookup(method, endpoint, callback, data) {\n  let jsonData; \n  if (data){ //if data exists\n    jsonData = JSON.stringify(data)\n  }\n  const xhr = new XMLHttpRequest() //used to intereact with servers, retrieve data from a URL without doing a full page refresh\n  const url = `http://localhost:8000/api${endpoint}`\n  console.log(endpoint)\n  xhr.responseType = \"json\"\n  xhr.open(method, url) //Initializes a request.\n  xhr.onload = function() { //Fired when an XMLHttpRequest transaction completes successfully.\n    callback(xhr.response, xhr.status)\n  }\n  xhr.onerror = function (e) { //e is the short var reference for event object which will be passed to event handlers.\n    console.log(e)\n    callback({\"message\": \"The request was an error\"}, 400)\n  }\n  xhr.send(jsonData)\n}\n\nexport function createPost(newPost, callback) {\n  \n}\n\nexport function loadPosts(callback) {\n  lookup(\"GET\", \"/posts/\", callback)\n}\n"]},"metadata":{},"sourceType":"module"}
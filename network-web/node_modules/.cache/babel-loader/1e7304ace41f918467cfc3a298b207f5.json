{"ast":null,"code":"import _toConsumableArray from\"/Users/romansingh/Documents/project4/network-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/Users/romansingh/Documents/project4/network-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import{apiPostList}from'./lookup';import{Post}from'./detail';import{jsx as _jsx}from\"react/jsx-runtime\";export function PostsList(props){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),PostsInit=_useState2[0],setPostsInit=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),posts=_useState4[0],setPosts=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),PostsDidSet=_useState6[0],setPostsDidSet=_useState6[1];useEffect(function(){var final=_toConsumableArray(props.newPosts).concat(PostsInit);if(final.length!==posts.length){setPosts(final);}},[props.newPosts,posts,PostsInit]);useEffect(function(){if(PostsDidSet===false){var handlePostListLookup=function handlePostListLookup(response,status){if(status===200){setPostsInit(response);setPostsDidSet(true);}else{alert(\"There was an error\");}};apiPostList(props.username,handlePostListLookup);}},[PostsInit,PostsDidSet,setPostsDidSet,props.username]);var handleDidRetweet=function handleDidRetweet(newPost){var updatePostsInit=_toConsumableArray(PostsInit);updatePostsInit.unshift(newPost);setPostsInit(updatePostsInit);var updateFinalPosts=_toConsumableArray(posts);updateFinalPosts.unshift(posts);setPosts(updateFinalPosts);};return posts.map(function(item,index){return/*#__PURE__*/_jsx(Post,{post:item,didRetweet:handleDidRetweet,className:\"my-5 py-5 border bg-white text-dark\"},\"\".concat(index,\"-{item.id}\"));});}","map":{"version":3,"sources":["/Users/romansingh/Documents/project4/network-web/src/posts/list.js"],"names":["React","useEffect","useState","apiPostList","Post","PostsList","props","PostsInit","setPostsInit","posts","setPosts","PostsDidSet","setPostsDidSet","final","newPosts","concat","length","handlePostListLookup","response","status","alert","username","handleDidRetweet","newPost","updatePostsInit","unshift","updateFinalPosts","map","item","index"],"mappings":"sVAAA,MAAOA,CAAAA,KAAP,EAAeC,SAAf,CAA0BC,QAA1B,KAA0C,OAA1C,CAEA,OAAQC,WAAR,KAA0B,UAA1B,CAEA,OAAQC,IAAR,KAAmB,UAAnB,C,2CAEA,MAAO,SAASC,CAAAA,SAAT,CAAmBC,KAAnB,CAA0B,eACKJ,QAAQ,CAAC,EAAD,CADb,wCACtBK,SADsB,eACXC,YADW,8BAEHN,QAAQ,CAAC,EAAD,CAFL,yCAEtBO,KAFsB,eAEfC,QAFe,8BAGSR,QAAQ,CAAC,KAAD,CAHjB,yCAGtBS,WAHsB,eAGTC,cAHS,eAI7BX,SAAS,CAAC,UAAI,CACZ,GAAMY,CAAAA,KAAK,CAAG,mBAAIP,KAAK,CAACQ,QAAV,EAAoBC,MAApB,CAA2BR,SAA3B,CAAd,CACA,GAAIM,KAAK,CAACG,MAAN,GAAiBP,KAAK,CAACO,MAA3B,CAAmC,CACjCN,QAAQ,CAACG,KAAD,CAAR,CACD,CACF,CALQ,CAKN,CAACP,KAAK,CAACQ,QAAP,CAAiBL,KAAjB,CAAwBF,SAAxB,CALM,CAAT,CAMAN,SAAS,CAAC,UAAM,CACd,GAAIU,WAAW,GAAK,KAApB,CAA0B,CACxB,GAAMM,CAAAA,oBAAoB,CAAG,QAAvBA,CAAAA,oBAAuB,CAACC,QAAD,CAAWC,MAAX,CAAsB,CACjD,GAAIA,MAAM,GAAK,GAAf,CAAmB,CACjBX,YAAY,CAACU,QAAD,CAAZ,CACAN,cAAc,CAAC,IAAD,CAAd,CACD,CAHD,IAGO,CACLQ,KAAK,CAAC,oBAAD,CAAL,CACD,CACF,CAPD,CAQAjB,WAAW,CAACG,KAAK,CAACe,QAAP,CAAiBJ,oBAAjB,CAAX,CACD,CACF,CAZQ,CAYN,CAACV,SAAD,CAAYI,WAAZ,CAAyBC,cAAzB,CAAyCN,KAAK,CAACe,QAA/C,CAZM,CAAT,CAeA,GAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACC,OAAD,CAAa,CACpC,GAAMC,CAAAA,eAAe,oBAAOjB,SAAP,CAArB,CACAiB,eAAe,CAACC,OAAhB,CAAwBF,OAAxB,EACAf,YAAY,CAACgB,eAAD,CAAZ,CACA,GAAME,CAAAA,gBAAgB,oBAAOjB,KAAP,CAAtB,CACAiB,gBAAgB,CAACD,OAAjB,CAAyBhB,KAAzB,EACAC,QAAQ,CAACgB,gBAAD,CAAR,CACD,CAPD,CAQA,MAAOjB,CAAAA,KAAK,CAACkB,GAAN,CAAU,SAACC,IAAD,CAAOC,KAAP,CAAe,CAC9B,mBAAO,KAAC,IAAD,EACL,IAAI,CAAED,IADD,CAEL,UAAU,CAAEN,gBAFP,CAGL,SAAS,CAAC,qCAHL,YAIGO,KAJH,eAAP,CAKD,CANM,CAAP,CAOD","sourcesContent":["import React, {useEffect, useState}  from 'react'\n\nimport {apiPostList} from './lookup'\n\nimport {Post} from './detail'\n\nexport function PostsList(props) {\n    const [PostsInit, setPostsInit] = useState([])\n    const [posts, setPosts] = useState([])\n    const [PostsDidSet, setPostsDidSet] = useState(false)\n    useEffect(()=>{\n      const final = [...props.newPosts].concat(PostsInit)\n      if (final.length !== posts.length) {\n        setPosts(final)\n      }\n    }, [props.newPosts, posts, PostsInit])\n    useEffect(() => {\n      if (PostsDidSet === false){\n        const handlePostListLookup = (response, status) => {\n          if (status === 200){\n            setPostsInit(response)\n            setPostsDidSet(true)\n          } else {\n            alert(\"There was an error\")\n          }\n        }\n        apiPostList(props.username, handlePostListLookup)\n      }\n    }, [PostsInit, PostsDidSet, setPostsDidSet, props.username])\n\n\n    const handleDidRetweet = (newPost) => {\n      const updatePostsInit = [...PostsInit]\n      updatePostsInit.unshift(newPost)\n      setPostsInit(updatePostsInit)\n      const updateFinalPosts = [...posts]\n      updateFinalPosts.unshift(posts)\n      setPosts(updateFinalPosts)\n    }\n    return posts.map((item, index)=>{\n      return <Post  \n        post={item} \n        didRetweet={handleDidRetweet}\n        className='my-5 py-5 border bg-white text-dark' \n        key={`${index}-{item.id}`} />\n    })\n  }\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _toConsumableArray from\"/Users/romansingh/Documents/project4/MyTweet/network-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/Users/romansingh/Documents/project4/MyTweet/network-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import{apiPostList}from'./lookup';import{Post}from'./detail';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export function PostsList(props){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),PostsInit=_useState2[0],setPostsInit=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),posts=_useState4[0],setPosts=_useState4[1];var _useState5=useState(null),_useState6=_slicedToArray(_useState5,2),nextUrl=_useState6[0],setNextUrl=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),PostsDidSet=_useState8[0],setPostsDidSet=_useState8[1];useEffect(function(){var final=_toConsumableArray(props.newPosts).concat(PostsInit);if(final.length!==posts.length){setPosts(final);}},[props.newPosts,posts,PostsInit]);useEffect(function(){if(PostsDidSet===false){var handlePostListLookup=function handlePostListLookup(response,status){if(status===200){setNextUrl(response.next);setPostsInit(response.results);setPostsDidSet(true);}else{alert(\"There was an error\");}};apiPostList(props.username,handlePostListLookup);}},[PostsInit,PostsDidSet,setPostsDidSet,props.username]);var handleDidRetweet=function handleDidRetweet(newPost){var updatePostsInit=_toConsumableArray(PostsInit);updatePostsInit.unshift(newPost);setPostsInit(updatePostsInit);var updateFinalPosts=_toConsumableArray(posts);updateFinalPosts.unshift(posts);setPosts(updateFinalPosts);};var handleLoadNext=function handleLoadNext(event){event.preventDefault();if(nextUrl!==null){var handleLoadNextResponse=function handleLoadNextResponse(response,status){if(status===200){setNextUrl(response.next);var newPosts=_toConsumableArray(posts).concat(response.results);setPostsInit(newPosts);setPosts(newPosts);}else{alert(\"There was an error\");}};apiPostList(props.username,handleLoadNextResponse,nextUrl);}};return/*#__PURE__*/_jsxs(React.Fragment,{children:[posts.map(function(item,index){return/*#__PURE__*/_jsx(Post,{post:item,didRetweet:handleDidRetweet,className:\"my-5 py-5 border bg-white text-dark\"},\"\".concat(index,\"-{item.id}\"));}),nextUrl!==null&&/*#__PURE__*/_jsx(\"button\",{onClick:handleLoadNext,className:\"btn btn-outline-primary\",children:\"Load Next \"})]});}","map":{"version":3,"sources":["/Users/romansingh/Documents/project4/MyTweet/network-web/src/posts/list.js"],"names":["React","useEffect","useState","apiPostList","Post","PostsList","props","PostsInit","setPostsInit","posts","setPosts","nextUrl","setNextUrl","PostsDidSet","setPostsDidSet","final","newPosts","concat","length","handlePostListLookup","response","status","next","results","alert","username","handleDidRetweet","newPost","updatePostsInit","unshift","updateFinalPosts","handleLoadNext","event","preventDefault","handleLoadNextResponse","map","item","index"],"mappings":"sWAAA,MAAOA,CAAAA,KAAP,EAAeC,SAAf,CAA0BC,QAA1B,KAA0C,OAA1C,CAEA,OAAQC,WAAR,KAA0B,UAA1B,CAEA,OAAQC,IAAR,KAAmB,UAAnB,C,wFAEA,MAAO,SAASC,CAAAA,SAAT,CAAmBC,KAAnB,CAA0B,CAC7B,cAAkCJ,QAAQ,CAAC,EAAD,CAA1C,wCAAOK,SAAP,eAAkBC,YAAlB,eACA,eAA0BN,QAAQ,CAAC,EAAD,CAAlC,yCAAOO,KAAP,eAAcC,QAAd,eACA,eAA8BR,QAAQ,CAAC,IAAD,CAAtC,yCAAOS,OAAP,eAAgBC,UAAhB,eACA,eAAsCV,QAAQ,CAAC,KAAD,CAA9C,yCAAOW,WAAP,eAAoBC,cAApB,eACAb,SAAS,CAAC,UAAI,CACZ,GAAMc,CAAAA,KAAK,CAAG,mBAAIT,KAAK,CAACU,QAAV,EAAoBC,MAApB,CAA2BV,SAA3B,CAAd,CACA,GAAIQ,KAAK,CAACG,MAAN,GAAiBT,KAAK,CAACS,MAA3B,CAAmC,CACjCR,QAAQ,CAACK,KAAD,CAAR,CACD,CACF,CALQ,CAKN,CAACT,KAAK,CAACU,QAAP,CAAiBP,KAAjB,CAAwBF,SAAxB,CALM,CAAT,CAMAN,SAAS,CAAC,UAAM,CACd,GAAIY,WAAW,GAAK,KAApB,CAA0B,CACxB,GAAMM,CAAAA,oBAAoB,CAAG,QAAvBA,CAAAA,oBAAuB,CAACC,QAAD,CAAWC,MAAX,CAAsB,CACjD,GAAIA,MAAM,GAAK,GAAf,CAAmB,CACjBT,UAAU,CAACQ,QAAQ,CAACE,IAAV,CAAV,CACAd,YAAY,CAACY,QAAQ,CAACG,OAAV,CAAZ,CACAT,cAAc,CAAC,IAAD,CAAd,CACD,CAJD,IAIO,CACLU,KAAK,CAAC,oBAAD,CAAL,CACD,CACF,CARD,CASArB,WAAW,CAACG,KAAK,CAACmB,QAAP,CAAiBN,oBAAjB,CAAX,CACD,CACF,CAbQ,CAaN,CAACZ,SAAD,CAAYM,WAAZ,CAAyBC,cAAzB,CAAyCR,KAAK,CAACmB,QAA/C,CAbM,CAAT,CAgBA,GAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACC,OAAD,CAAa,CACpC,GAAMC,CAAAA,eAAe,oBAAOrB,SAAP,CAArB,CACAqB,eAAe,CAACC,OAAhB,CAAwBF,OAAxB,EACAnB,YAAY,CAACoB,eAAD,CAAZ,CACA,GAAME,CAAAA,gBAAgB,oBAAOrB,KAAP,CAAtB,CACAqB,gBAAgB,CAACD,OAAjB,CAAyBpB,KAAzB,EACAC,QAAQ,CAACoB,gBAAD,CAAR,CACD,CAPD,CASA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,KAAD,CAAW,CAChCA,KAAK,CAACC,cAAN,GACA,GAAItB,OAAO,GAAK,IAAhB,CAAsB,CACpB,GAAMuB,CAAAA,sBAAsB,CAAG,QAAzBA,CAAAA,sBAAyB,CAACd,QAAD,CAAWC,MAAX,CAAqB,CAClD,GAAIA,MAAM,GAAK,GAAf,CAAmB,CACjBT,UAAU,CAACQ,QAAQ,CAACE,IAAV,CAAV,CACA,GAAMN,CAAAA,QAAQ,CAAG,mBAAIP,KAAJ,EAAWQ,MAAX,CAAkBG,QAAQ,CAACG,OAA3B,CAAjB,CACAf,YAAY,CAACQ,QAAD,CAAZ,CACAN,QAAQ,CAACM,QAAD,CAAR,CACD,CALD,IAKO,CACLQ,KAAK,CAAC,oBAAD,CAAL,CACD,CACF,CATD,CAUArB,WAAW,CAACG,KAAK,CAACmB,QAAP,CAAgBS,sBAAhB,CAAwCvB,OAAxC,CAAX,CACD,CACF,CAfD,CAgBA,mBAAO,MAAC,KAAD,CAAO,QAAP,YAAiBF,KAAK,CAAC0B,GAAN,CAAU,SAACC,IAAD,CAAOC,KAAP,CAAe,CAC/C,mBAAO,KAAC,IAAD,EACL,IAAI,CAAED,IADD,CAEL,UAAU,CAAEV,gBAFP,CAGL,SAAS,CAAC,qCAHL,YAIGW,KAJH,eAAP,CAKD,CANuB,CAAjB,CAOL1B,OAAO,GAAK,IAAZ,eAAoB,eAAQ,OAAO,CAAEoB,cAAjB,CAAgC,SAAS,CAAC,yBAA1C,wBAPf,GAAP,CASD","sourcesContent":["import React, {useEffect, useState}  from 'react'\n\nimport {apiPostList} from './lookup'\n\nimport {Post} from './detail'\n\nexport function PostsList(props) {\n    const [PostsInit, setPostsInit] = useState([])\n    const [posts, setPosts] = useState([])\n    const [nextUrl, setNextUrl] = useState(null)\n    const [PostsDidSet, setPostsDidSet] = useState(false)\n    useEffect(()=>{\n      const final = [...props.newPosts].concat(PostsInit)\n      if (final.length !== posts.length) {\n        setPosts(final)\n      }\n    }, [props.newPosts, posts, PostsInit])\n    useEffect(() => {\n      if (PostsDidSet === false){\n        const handlePostListLookup = (response, status) => {\n          if (status === 200){\n            setNextUrl(response.next)\n            setPostsInit(response.results)\n            setPostsDidSet(true)\n          } else {\n            alert(\"There was an error\")\n          }\n        }\n        apiPostList(props.username, handlePostListLookup)\n      }\n    }, [PostsInit, PostsDidSet, setPostsDidSet, props.username])\n\n\n    const handleDidRetweet = (newPost) => {\n      const updatePostsInit = [...PostsInit]\n      updatePostsInit.unshift(newPost)\n      setPostsInit(updatePostsInit)\n      const updateFinalPosts = [...posts]\n      updateFinalPosts.unshift(posts)\n      setPosts(updateFinalPosts)\n    } \n\n    const handleLoadNext = (event) => {\n      event.preventDefault()\n      if (nextUrl !== null) {\n        const handleLoadNextResponse = (response, status) =>{\n          if (status === 200){\n            setNextUrl(response.next)\n            const newPosts = [...posts].concat(response.results)\n            setPostsInit(newPosts)\n            setPosts(newPosts)\n          } else {\n            alert(\"There was an error\")\n          }\n        }\n        apiPostList(props.username,handleLoadNextResponse, nextUrl)\n      }\n    }\n    return <React.Fragment>{posts.map((item, index)=>{\n      return <Post  \n        post={item} \n        didRetweet={handleDidRetweet}\n        className='my-5 py-5 border bg-white text-dark' \n        key={`${index}-{item.id}`} />\n    })}\n    { nextUrl !== null && <button onClick={handleLoadNext}className='btn btn-outline-primary'>Load Next </button>}\n    </React.Fragment>\n  }\n"]},"metadata":{},"sourceType":"module"}
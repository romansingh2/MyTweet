{"ast":null,"code":"var _jsxFileName = \"/Users/romansingh/Documents/project4/network-web/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction loadPosts(callback) {\n  //The purpose of this callback function is to change a piece of the state that is a part of the parent component. \n  const xhr = new XMLHttpRequest();\n  const method = 'GET'; // \"POST\"\n\n  const url = \"http://localhost:8000/api/posts/\";\n  xhr.responseType = \"json\";\n  xhr.open(method, url);\n\n  xhr.onload = function () {\n    callback(xhr.response, xhr.status);\n  };\n\n  xhr.onerror = function (e) {\n    console.log(e);\n    callback({\n      \"message\": \"The request was an error\"\n    }, 400);\n  };\n\n  xhr.send();\n}\n\nfunction ActionBtn(props) {\n  const {\n    Post,\n    action\n  } = props;\n  const className = props.className ? props.className : 'btn btn-primary btn-sm';\n}\n\n_c = ActionBtn;\n\nfunction Post(props) {\n  const {\n    Post\n  } = props;\n  const className = props.className ? props.className : 'col-10 mx-auto col-md-6';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: className,\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [Post.id, \" - \", Post.tweet, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 10\n  }, this);\n}\n\n_c2 = Post;\n\nfunction App() {\n  _s();\n\n  const [Posts, setPosts] = useState([]);\n  useEffect(() => {\n    const myCallback = (response, status) => {\n      console.log(response, status);\n\n      if (status === 200) {\n        setPosts(response);\n      } else {\n        alert(\"There was an error\");\n      }\n    };\n\n    loadPosts(myCallback);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        className: \"App-logo\",\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Edit \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"src/App.js\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 16\n        }, this), \" and save to reload.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: Posts.map((item, index) => {\n            return /*#__PURE__*/_jsxDEV(Post, {\n              Post: item,\n              className: \"my-5 py-5 border bg-white text-dark\"\n            }, `${index}-{item.id}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 20\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"App-link\",\n        href: \"https://reactjs.org\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: \"Learn React\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"MnjPEElIRazGd4552sXWuIXl2x8=\");\n\n_c3 = App;\nexport default App;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"ActionBtn\");\n$RefreshReg$(_c2, \"Post\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"sources":["/Users/romansingh/Documents/project4/network-web/src/App.js"],"names":["React","useEffect","useState","loadPosts","callback","xhr","XMLHttpRequest","method","url","responseType","open","onload","response","status","onerror","e","console","log","send","ActionBtn","props","Post","action","className","id","tweet","App","Posts","setPosts","myCallback","alert","logo","map","item","index"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\n\nfunction loadPosts(callback){ //The purpose of this callback function is to change a piece of the state that is a part of the parent component. \n  const xhr = new XMLHttpRequest()\n  const method = 'GET' // \"POST\"\n  const url = \"http://localhost:8000/api/posts/\"\n  xhr.responseType = \"json\"\n  xhr.open(method, url)\n  xhr.onload = function() {\n    callback(xhr.response, xhr.status)\n  }\n  xhr.onerror = function (e) {\n    console.log(e)\n    callback({\"message\": \"The request was an error\"}, 400)\n  }\n  xhr.send()\n}\n\nfunction ActionBtn(props) {\n  const{Post, action} = props\n  const className = props.className ? props.className : 'btn btn-primary btn-sm'\n  \n}\n\nfunction Post(props) {\n  const {Post} = props\n  const className = props.className ? props.className : 'col-10 mx-auto col-md-6'\n  return <div className={className}>\n    <p>{Post.id} - {Post.tweet} </p>\n    </div>\n}\n\n\nfunction App() {\n  const [Posts, setPosts] = useState([])\n\n  useEffect(() => {\n    const myCallback = (response, status) => {\n      console.log(response, status)\n      if (status === 200){\n        setPosts(response)\n      } else {\n        alert(\"There was an error\")\n      }\n    }\n    loadPosts(myCallback)\n  }, [] )\n  \n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <p>\n        <div>\n          {Posts.map((item, index)=>{\n            return <Post Post={item} className='my-5 py-5 border bg-white text-dark' key={`${index}-{item.id}`} />\n          })}\n        </div>\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
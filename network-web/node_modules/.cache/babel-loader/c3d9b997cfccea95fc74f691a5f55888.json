{"ast":null,"code":"var _jsxFileName = \"/Users/romansingh/Documents/project4/MyTweet/network-web/src/posts/feed.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { apiPostFeed } from './lookup';\nimport { Post } from './detail';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function FeedList(props) {\n  _s();\n\n  const [PostsInit, setPostsInit] = useState([]);\n  const [posts, setPosts] = useState([]);\n  const [nextUrl, setNextUrl] = useState(null);\n  const [PostsDidSet, setPostsDidSet] = useState(false);\n  useEffect(() => {\n    const final = [...props.newPosts].concat(PostsInit);\n\n    if (final.length !== posts.length) {\n      setPosts(final);\n    }\n  }, [props.newPosts, posts, PostsInit]);\n  useEffect(() => {\n    if (PostsDidSet === false) {\n      const handlePostListLookup = (response, status) => {\n        if (status === 200) {\n          setNextUrl(response.next);\n          setPostsInit(response.results);\n          setPostsDidSet(true);\n        }\n      };\n\n      apiPostFeed(handlePostListLookup);\n    }\n  }, [PostsInit, PostsDidSet, setPostsDidSet, props.username]);\n\n  const handleDidRetweet = newPost => {\n    const updatePostsInit = [...PostsInit];\n    updatePostsInit.unshift(newPost);\n    setPostsInit(updatePostsInit);\n    const updateFinalPosts = [...posts];\n    updateFinalPosts.unshift(posts);\n    setPosts(updateFinalPosts);\n  };\n\n  const handleLoadNext = event => {\n    event.preventDefault();\n\n    if (nextUrl !== null) {\n      const handleLoadNextResponse = (response, status) => {\n        if (status === 200) {\n          setNextUrl(response.next);\n          const newPosts = [...posts].concat(response.results);\n          setPostsInit(newPosts);\n          setPosts(newPosts);\n        }\n      };\n\n      apiPostFeed(handleLoadNextResponse, nextUrl);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [posts.map((item, index) => {\n      return /*#__PURE__*/_jsxDEV(Post, {\n        post: item,\n        didRetweet: handleDidRetweet,\n        className: \"my-5 py-5 border bg-white text-dark\"\n      }, `${index}-{item.id}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 14\n      }, this);\n    }), nextUrl !== null && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLoadNext,\n      className: \"btn btn-outline-primary\",\n      children: \"Load Next \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 27\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 12\n  }, this);\n}\n\n_s(FeedList, \"/6zYLXAhY/BQGv+YC2D9Csv+lTo=\");\n\n_c = FeedList;\n\nvar _c;\n\n$RefreshReg$(_c, \"FeedList\");","map":{"version":3,"sources":["/Users/romansingh/Documents/project4/MyTweet/network-web/src/posts/feed.js"],"names":["React","useEffect","useState","apiPostFeed","Post","FeedList","props","PostsInit","setPostsInit","posts","setPosts","nextUrl","setNextUrl","PostsDidSet","setPostsDidSet","final","newPosts","concat","length","handlePostListLookup","response","status","next","results","username","handleDidRetweet","newPost","updatePostsInit","unshift","updateFinalPosts","handleLoadNext","event","preventDefault","handleLoadNextResponse","map","item","index"],"mappings":"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","sourcesContent":["import React, {useEffect, useState}  from 'react'\n\nimport {apiPostFeed} from './lookup'\n\nimport {Post} from './detail'\n\nexport function FeedList(props) {\n    const [PostsInit, setPostsInit] = useState([])\n    const [posts, setPosts] = useState([])\n    const [nextUrl, setNextUrl] = useState(null)\n    const [PostsDidSet, setPostsDidSet] = useState(false)\n    useEffect(()=>{\n      const final = [...props.newPosts].concat(PostsInit)\n      if (final.length !== posts.length) {\n        setPosts(final)\n      }\n    }, [props.newPosts, posts, PostsInit])\n    useEffect(() => {\n      if (PostsDidSet === false){\n        const handlePostListLookup = (response, status) => {\n          if (status === 200){\n            setNextUrl(response.next)\n            setPostsInit(response.results)\n            setPostsDidSet(true)\n          } \n        }\n        apiPostFeed(handlePostListLookup)\n      }\n    }, [PostsInit, PostsDidSet, setPostsDidSet, props.username])\n\n\n    const handleDidRetweet = (newPost) => {\n      const updatePostsInit = [...PostsInit]\n      updatePostsInit.unshift(newPost)\n      setPostsInit(updatePostsInit)\n      const updateFinalPosts = [...posts]\n      updateFinalPosts.unshift(posts)\n      setPosts(updateFinalPosts)\n    } \n\n    const handleLoadNext = (event) => {\n      event.preventDefault()\n      if (nextUrl !== null) {\n        const handleLoadNextResponse = (response, status) =>{\n          if (status === 200){\n            setNextUrl(response.next)\n            const newPosts = [...posts].concat(response.results)\n            setPostsInit(newPosts)\n            setPosts(newPosts)\n          } \n        }\n        apiPostFeed(handleLoadNextResponse, nextUrl)\n      }\n    }\n    return <React.Fragment>{posts.map((item, index)=>{\n      return <Post  \n        post={item} \n        didRetweet={handleDidRetweet}\n        className='my-5 py-5 border bg-white text-dark' \n        key={`${index}-{item.id}`} />\n    })}\n    { nextUrl !== null && <button onClick={handleLoadNext}className='btn btn-outline-primary'>Load Next </button>}\n    </React.Fragment>\n  }\n"]},"metadata":{},"sourceType":"module"}
{"version":3,"sources":["logo.svg","posts/components.js","lookup/components.js","App.js","reportWebVitals.js","index.js"],"names":["PostsComponent","props","textAreaRef","React","createRef","useState","newPosts","setNewPosts","className","onSubmit","event","preventDefault","newVal","current","value","tempNewPosts","unshift","tweet","likes","id","ref","required","name","type","PostsList","PostsInit","setPostsInit","Posts","setPosts","useEffect","final","concat","length","callback","xhr","XMLHttpRequest","responseType","open","onload","response","status","onerror","e","console","log","send","loadPosts","finalPostsInit","alert","map","item","index","Post","ActionBtn","action","setLikes","userLike","setUserLike","actionDisplay","display","onClick","App","src","logo","alt","href","target","rel","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","appEl","document","getElementById","ReactDOM","render","postsEl"],"mappings":"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","file":"static/js/main.e5be61f3.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, {useEffect, useState}  from 'react'\n\nimport {loadPosts} from '../lookup'\n\nexport function PostsComponent(props) {\n  const textAreaRef = React.createRef() //React refs make it possible for you to directly access the DOM in React.\n  const [newPosts, setNewPosts] = useState([]) \n  const handleSubmit = (event) => { \n    event.preventDefault() //if intended action does not occur prevent default action\n    const newVal = textAreaRef.current.value //set newVal equal to the value of the text area\n    let tempNewPosts = [...newPosts] //create variable tempNewPosts and set it to newPosts array\n    tempNewPosts.unshift({ //add new element to tempnewposts array\n      tweet: newVal,\n      likes: 0,\n      id: 12313\n    })\n    setNewPosts(tempNewPosts) //change the state of setNewPosts to tempNewPosts\n    textAreaRef.current.value = '' // set text area to be blank after submit\n  }\n  return <div className={props.className}>\n          <div className='col-12 mb-3'>\n            <form onSubmit={handleSubmit}>\n              <textarea ref={textAreaRef} required={true} className='form-control' name='tweet'>\n\n              </textarea>\n              <button type='submit' className='btn btn-primary my-3'>Post</button>\n          </form>\n          </div>\n      <PostsList newPosts = {newPosts}/>\n  </div>\n}\n\n\nexport function PostsList(props) {\n    const [PostsInit, setPostsInit] = useState([]) //initialize PostsInit and setPostsIinit\n    const [Posts, setPosts] = useState([]) //initialize Posts and setPosts\n    //setPostsInit([...props.newPosts].concat(PostsInit))\n    \n    useEffect(() => {\n    const final = [...props.newPosts].concat(PostsInit) //join newPosts and PostsInit array\n     if (final.length !== Posts.length) {\n       setPosts(final) //update setPosts with final\n     }\n  }, [props.newPosts, Posts, PostsInit]) \n    \n    \n    useEffect(() => {\n      const myCallback = (response, status) => {\n        if (status === 200){\n          const finalPostsInit = [...response].concat()\n          setPostsInit(finalPostsInit)\n        } else {\n          alert(\"There was an error\")\n        }\n      }      \n      loadPosts(myCallback)\n    }, [PostsInit])\n    return Posts.map((item, index)=>{\n      return <Post Post={item} className='my-5 py-5 border bg-white text-dark' key={`${index}-{item.id}`} />\n    })\n  }\n\n\n  export function ActionBtn(props) {\n    const {Post, action} = props\n    const [likes, setLikes] = useState(Post.likes ? Post.likes : 0)\n    const [userLike, setUserLike] = useState(Post.userLike === true ? true : false)\n    const className = props.className ? props.className : 'btn btn-primary btn-sm'\n    const actionDisplay = action.display ? action.display : 'Action'\n    \n    const handleClick = (event) => {\n      event.preventDefault()\n      if (action.type === 'like') {\n        if (userLike === true) {\n          // perhaps i Unlike it?\n          setLikes(likes - 1)\n          setUserLike(false)\n        } else {\n          setLikes(likes + 1)\n          setUserLike(true)\n        }\n        \n      }\n    }\n    const display = action.type === 'like' ? `${likes} ${actionDisplay}` : actionDisplay\n    return <button className={className} onClick={handleClick}>{display}</button>\n  }\n  \n  \n  export function Post(props) {\n    const {Post} = props\n    const className = props.className ? props.className : 'col-10 mx-auto col-md-6'\n    return <div className={className}>\n        <p>{Post.id} - {Post.tweet}</p>\n        <div className='btn btn-group'>\n          <ActionBtn Post={Post} action={{type: \"like\", display:\"Likes\"}}/>\n          <ActionBtn Post={Post} action={{type: \"unlike\", display:\"Unlike\"}}/>\n          <ActionBtn Post={Post} action={{type: \"retweet\", display:\"\"}}/>\n        </div>\n    </div>\n  }","export function loadPosts(callback) {\n    const xhr = new XMLHttpRequest()\n    const method = 'GET' // \"POST\"\n    const url = \"http://localhost:8000/api/posts/\"\n    const responseType = \"json\"\n    xhr.responseType = responseType\n    xhr.open(method, url)\n    xhr.onload = function() {\n      callback(xhr.response, xhr.status)\n    }\n    xhr.onerror = function (e) {\n      console.log(e)\n      callback({\"message\": \"The request was an error\"}, 400)\n    }\n    xhr.send()\n  }","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport {PostsComponent} from './posts'\n\n\nfunction App() {\n  \n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <div>\n          <PostsComponent /> \n        </div>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {PostsComponent} from './posts'\nimport reportWebVitals from './reportWebVitals';\n\nconst appEl = document.getElementById('root')\nif (appEl) {\n  ReactDOM.render(<App />, appEl);\n}\n\nconst postsEl = document.getElementById(\"network\")\nif (postsEl) {\n  ReactDOM.render(<PostsComponent />, postsEl);\n}\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}